/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package javaapplication1.Login;

import classSuport.Date;
import java.awt.Color;
import java.awt.Component;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javaapplication1.database.SQLServerConnection;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;

/**
 *
 * @author vuwin
 */
public class dangky extends javax.swing.JFrame {

    /**
     * Creates new form dangky
     */
    public dangky() {
        initComponents();
        becomedate();
    } 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 781, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 801, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(dangky.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(dangky.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(dangky.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(dangky.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new dangky().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

private void becomedate() {
    Date date = new Date();
    // Xóa các mục cũ trong JComboBox trước khi thêm mới
    DayCombox.removeAllItems();
    MonthCombox.removeAllItems();
    YearCombox.removeAllItems();

    // Thêm ngày vào DayComboBox
    for (String day : date.basicDay()) {
        DayCombox.addItem(day);
    }

    // Thêm tháng vào MonthComboBox
    for (String month : date.basicMonth()) {
        MonthCombox.addItem(month);
    }

    // Thêm năm vào YearComboBox
    for (String year : date.basicYear()) {
        YearCombox.addItem(year);
    }
    SQLServerConnection dbConnection = new SQLServerConnection();
    ChucVuComboBox.removeAllItems();
    if (dbConnection.connect()) {
    List<String> luu = dbConnection.getTenChucvu();
    
    // Kiểm tra nếu luu không phải là null trước khi duyệt qua
    if (luu != null) {
        for (String s : luu) { 
            ChucVuComboBox.addItem(s);
        }
    } else {
        System.out.println("Không có chức vụ nào được tìm thấy.");
    }
    } else {
        System.out.println("Kết nối đến cơ sở dữ liệu thất bại.");
    }
    

}

}
